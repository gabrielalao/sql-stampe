<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.torodb.stampede</groupId>
        <artifactId>stampede-pom</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>stampede-main</artifactId>

    <name>ToroDB: Stampede main</name>
    <description>ToroDB stampede main project. Contains executable class and CLI parsing.</description>

    <properties>
        <profiles.resources>src/main/profiles/dev</profiles.resources>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.torodb.engine</groupId>
            <artifactId>packaging-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>stampede-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <phase>integration-test</phase>
                            <configuration>
                                <systemProperties>
                                    <torodbIntegrationConfigYml>${torodbIntegrationConfigYml}</torodbIntegrationConfigYml>
                                </systemProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-copy-dependencies</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/dist/lib</outputDirectory>
                                <includeScope>runtime</includeScope>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                                <useRepositoryLayout>true</useRepositoryLayout>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-copy-package-properties</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/dist/</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${profiles.resources}</directory>
                                        <include>packaging.properties</include>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <delimiters>
                                    <delimiter>@{*}</delimiter>
                                </delimiters>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                            </configuration>
                        </execution>
                        <execution>
                            <id>dist-copy-resources</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/dist/</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/dist</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <delimiters>
                                    <delimiter>@{*}</delimiter>
                                </delimiters>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>read-packaging-properties</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${project.build.directory}/dist/packaging.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>dist-main-jar</id>
                            <phase>package</phase>
                            <goals>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/dist/lib/</outputDirectory>
                                <finalName>${assembler.name}-${project.version}</finalName>
                                <archive>
                                    <manifest>
                                        <addClasspath>true</addClasspath>
                                        <classpathMavenRepositoryLayout>true</classpathMavenRepositoryLayout>
                                        <useUniqueVersions>false</useUniqueVersions>
                                        <classpathPrefix>./</classpathPrefix>
                                        <mainClass>${assembler.mainClass}</mainClass>
                                    </manifest>
                                </archive>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${profiles.resources}</directory>
            </resource>
        </resources>
    </build>
    
    <profiles>
        <profile>
            <id>assembler</id>
            <properties>
                <s3.push>false</s3.push>
                <s3.path>s3://torodb.download/stampede</s3.path>
                <s3.profile>default</s3.profile>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read-packaging-properties</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-package-properties</id>
                            </execution>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>${assembler.name}-${project.version}</finalName>
                                    <outputDirectory>${project.build.directory}/dist</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-assembler-push-s3</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>assembler-push-s3</name>
                                            <build>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <from>ubuntu:16.04</from>
                                                <runCmds>
                                                    <run>apt update</run>
                                                    <run>apt -y install python-pip</run>
                                                    <run>pip install awscli</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <volumes>
                                                    <bind>
                                                        <volume>${project.build.directory}/dist:/dist</volume>
                                                        <volume>${user.home}/.aws:/root/.aws:ro</volume>
                                                    </bind>
                                                </volumes>
                                                <env>
                                                    <S3_PATH>${s3.path}</S3_PATH>
                                                    <S3_PROFILE>${s3.profile}</S3_PROFILE>
                                                    <FINAL_NAME>${assembler.name}-${project.version}</FINAL_NAME>
                                                </env>
                                                <wait>
                                                    <time>600000</time>
                                                    <log>setup s3 finished</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    set -x -v -e;
                                                    trap "chmod a+w /dist -R" ERR EXIT;
                                                    cd /dist
                                                    if [ "${s3.push}" == "true" ];
                                                    then
                                                        aws --profile "$S3_PROFILE" s3 cp "$FINAL_NAME".tar.bz2 "$S3_PATH"/"$FINAL_NAME".tar.bz2 --grants "read=uri=http://acs.amazonaws.com/groups/global/AllUsers"
                                                        aws --profile "$S3_PROFILE" s3 cp "$FINAL_NAME".zip "$S3_PATH"/"$FINAL_NAME".zip --grants "read=uri=http://acs.amazonaws.com/groups/global/AllUsers"
                                                    fi;
                                                    echo "'setup s3 finished'";
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker</id>
            <properties>
                <docker.javaimage>java:8-jre</docker.javaimage>
                <docker.skip.push>true</docker.skip.push>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read-packaging-properties</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-package-properties</id>
                            </execution>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-base</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>torodb-base</name>
                                            <build>
                                                <from>${docker.javaimage}</from>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <runCmds>
                                                    <run>apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv D68FA50FEA312927</run>
                                                    <run>echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" > /etc/apt/sources.list.d/mongodb-org-3.2.list</run>
                                                    <run>apt-get update</run>
                                                    <run>apt-get -y install netcat postgresql-client python-pip mongodb-org-shell mongodb-org-tools</run>
                                                    <run>pip install awscli</run>
                                                    <run>apt-get clean</run>
                                                    <run>rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <wait>
                                                    <log>base image generated</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    echo base image generated;
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <filter>torodb-stampede</filter>
                                    <images>
                                        <image>
                                            <alias>torodb-stampede</alias>
                                            <name>torodb/stampede:%v</name>
                                            <build>
                                                <from>torodb-base</from>
                                                <cleanup>remove</cleanup>
                                                <tags>
                                                    <tag>${docker.tags.latest}</tag>
                                                </tags>
                                                <assembly>
                                                    <mode>dir</mode>
                                                    <descriptor>assembly.xml</descriptor>
                                                </assembly>
                                                <env>
                                                    <PATH>/maven/bin:$PATH</PATH>
                                                </env>
                                                <runCmds>
                                                    <run>useradd -d /maven torodb</run>
                                                    <run>chown torodb /maven -R</run>
                                                </runCmds>
                                                <entryPoint>
                                                    <exec>
                                                        <arg>/maven/bin/entry-point</arg>
                                                    </exec>
                                                </entryPoint>
                                                <cmd>
                                                    <arg>torodb-stampede</arg>
                                                </cmd>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>snap</id>
            <properties>
                <package.name>${assembler.name}</package.name>
                <launchpad.push>false</launchpad.push>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read-packaging-properties</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>snap-description-oneline</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>bsh-property</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        project.getProperties().setProperty("assembler.description_oneline",
                                            project.getProperties().getProperty("assembler.description").replace("\"", "\\\"").replace("\n", "\\n"));
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-package-properties</id>
                            </execution>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-snap</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/snap/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>assembler</finalName>
                                    <outputDirectory>${project.build.directory}/dist/snap/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-snapbuilder</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>snapbuilder</name>
                                            <build>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <from>ubuntu:16.04</from>
                                                <runCmds>
                                                    <run>apt update</run>
                                                    <run>apt -y install snapcraft git</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <volumes>
                                                    <bind>
                                                        <volume>${project.build.directory}/dist/snap:/snap</volume>
                                                        <volume>${user.home}/.gitconfig:/config/.gitconfig:ro</volume>
                                                        <volume>${user.home}/.ssh:/config/.ssh:ro</volume>
                                                    </bind>
                                                </volumes>
                                                <env>
                                                    <SNAP_CHANNEL>${snap.channel}</SNAP_CHANNEL>
                                                    <LAUNCHPAD_USER>${launchpad.user}</LAUNCHPAD_USER>
                                                    <LAUNCHPAD_HOST>${launchpad.host}</LAUNCHPAD_HOST>
                                                    <PACKAGE_NAME>${package.name}</PACKAGE_NAME>
                                                </env>
                                                <wait>
                                                    <time>600000</time>
                                                    <log>setup launchpad finished</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    set -x -v -e;
                                                    trap "chmod a+w /snap -R" ERR EXIT;
                                                    cp -a /config/.ssh /config/.gitconfig /root/.;
                                                    chown root:root /root/.ssh /root/.gitconfig -R;
                                                    cd /snap/${package.name};
                                                    if [ "${launchpad.push}" == "true" ];
                                                    then
                                                        bash -x ../update-launchpad.sh;
                                                    else
                                                        snapcraft clean;
                                                        snapcraft;
                                                    fi;
                                                    echo "'setup launchpad finished'";
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>rpm</id>
            <properties>
                <package.name>${assembler.name}</package.name>
                <rpmbuilder.image>fedora:25</rpmbuilder.image>
                <copr.push>false</copr.push>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read-packaging-properties</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create_rpm_date</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create-timestamp</goal>
                                </goals>
                                <configuration>
                                    <timestampFormat>EEE MMM d yyyy</timestampFormat>
                                    <timestampPropertyName>rpm.date</timestampPropertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create_revision</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create-timestamp</goal>
                                </goals>
                                <configuration>
                                    <timestampFormat>yyyyMMddHHmmss</timestampFormat>
                                    <timestampPropertyName>assembler.revision</timestampPropertyName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-version-property</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>assembler.version</name>
                                    <value>${project.version}</value>
                                    <regex>-</regex>
                                    <replacement>_</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-package-properties</id>
                            </execution>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-rpm</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/rpm/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>assembler</finalName>
                                    <outputDirectory>${project.build.directory}/dist/rpm/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-rpmbuilder</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>rpmbuilder</name>
                                            <build>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <from>${rpmbuilder.image}</from>
                                                <runCmds>
                                                    <run>dnf -y install --best rpmdevtools rpmlint copr-cli systemd help2man java-1.8.0-openjdk-headless postgresql mongodb openssl</run>
                                                    <run>rpmdev-setuptree</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <volumes>
                                                    <bind>
                                                        <volume>${project.build.directory}/dist/rpm/${package.name}:/rpm</volume>
                                                        <volume>${user.home}/.config/copr:/root/.config/copr:ro</volume>
                                                    </bind>
                                                </volumes>
                                                <env>
                                                    <SPEC_FILE>/rpm/${package.name}.spec</SPEC_FILE>
                                                </env>
                                                <wait>
                                                    <time>600000</time>
                                                    <log>rpmbuilder finished</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    set -x -v -e;
                                                    trap "chmod a+w /rpm -R" ERR EXIT;
                                                    cp -a /rpm/* "$HOME/rpmbuild/SOURCES";
                                                    rm -Rf "$HOME/rpmbuild/SOURCES/rpmbuild";
                                                    spectool -g -R "$SPEC_FILE";
                                                    #dnf -y builddep "$SPEC_FILE";
                                                    if [ "${copr.push}" == "true" ];
                                                    then
                                                        rpmbuild -bs "$SPEC_FILE";
                                                        cp -a "$HOME/rpmbuild" "/rpm/.";
                                                        copr-cli build --nowait ${copr.name} $HOME/rpmbuild/SRPMS/*.src.rpm;
                                                    else
                                                        rpmbuild -ba "$SPEC_FILE";
                                                        cp -a "$HOME/rpmbuild" "/rpm/.";
                                                    fi;
                                                    echo "rpmbuilder finished";
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>deb</id>
            <properties>
                <package.name>${assembler.name}</package.name>
                <debbuilder.image>debian:8</debbuilder.image>
                <launchpad.push>false</launchpad.push>
                <deb.distro>xenial</deb.distro>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-dependencies</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read-specific-packaging-properties</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${project.build.directory}/dist/deb/packaging.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                            <execution>
                                <id>read-packaging-properties</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create_deb_date</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create-timestamp</goal>
                                </goals>
                                <configuration>
                                    <timestampFormat>EEE, d MMM yyyy HH:mm:ss Z</timestampFormat>
                                    <timestampPropertyName>deb.date</timestampPropertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create_revision</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create-timestamp</goal>
                                </goals>
                                <configuration>
                                    <timestampFormat>yyyyMMddHHmmss</timestampFormat>
                                    <timestampPropertyName>assembler.revision</timestampPropertyName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-version-property</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>assembler.version</name>
                                    <value>${project.version}</value>
                                    <regex>-SNAPSHOT</regex>
                                    <replacement></replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                            <execution>
                                <id>snap-description-oneline</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>bsh-property</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        project.getProperties().setProperty("assembler.description_twospaces",
                                            project.getProperties().getProperty("assembler.description")
                                            .replaceFirst("^\n", ".\n")
                                            .replace("\n", "\n  ")
                                            .replaceAll("\n  \n", "\n  .\n")
                                            .replaceFirst("\n  $", "\n  ."));
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-copy-package-properties</id>
                            </execution>
                            <execution>
                                <id>dist-copy-specific-package-properties</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/dist/deb</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/dist/deb</directory>
                                            <include>packaging.properties</include>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                    <delimiters>
                                        <delimiter>@{*}</delimiter>
                                    </delimiters>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                </configuration>
                            </execution>
                            <execution>
                                <id>dist-copy-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deb-append-copyright</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <concat 
                                            destfile="${project.build.directory}/dist/deb/${package.name}/build/debian/copyright"
                                            force="yes" append="yes">
                                            <fileset dir="${project.build.directory}/dist/doc" include="LICENSE-GNU_AGPLv3.txt" />
                                        </concat>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-main-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembler-deb</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/deb/assembly.xml</descriptor>
                                    </descriptors>
                                    <finalName>${package.name}</finalName>
                                    <outputDirectory>${project.build.directory}/dist/deb/${package.name}</outputDirectory>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>docker-debbuilder</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>debbuilder</name>
                                            <build>
                                                <cleanup>try</cleanup>
                                                <optimise>false</optimise>
                                                <from>${debbuilder.image}</from>
                                                <runCmds>
                                                    <run>echo "deb http://ftp.de.debian.org/debian jessie-backports main" &gt;&gt; /etc/apt/sources.list</run>
                                                    <run>apt update</run>
                                                    <run>apt -y install -t jessie-backports devscripts build-essential lintian help2man openjdk-8-jdk-headless postgresql-client mongodb-clients</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <volumes>
                                                    <bind>
                                                        <volume>${project.build.directory}/dist/deb/${package.name}:/deb</volume>
                                                        <volume>${user.home}/.gnupg:/config/.gnupg:ro</volume>
                                                        <volume>${user.home}/.dput.cf:/config/.dput.cf:ro</volume>
                                                    </bind>
                                                </volumes>
                                                <wait>
                                                    <time>600000</time>
                                                    <log>debbuilder finished</log>
                                                </wait>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>-c</arg>
                                                    <arg>
                                                    set -x -v -e;
                                                    trap "chmod a+w /deb -R" ERR EXIT;
                                                    cp -a /config/.gnupg /config/.dput.cf /root/.;
                                                    chown root:root /root/.gnupg /root/.dput.cf -R;
                                                    mkdir "$HOME/debbuild";
                                                    cd "$HOME/debbuild";
                                                    tar xzf /deb/${package.name}.tar.gz;
                                                    cd ${package.name}/debian;
                                                    if [ "${launchpad.push}" == "true" ];
                                                    then
                                                        debuild --no-tgz-check -S;
                                                        dput ${launchpad.dputprofile} ../../${package.name}_*.changes;
                                                    else
                                                        debuild --no-tgz-check -us -uc;
                                                    fi;
                                                    cp -a "$HOME/debbuild" "/deb/.";
                                                    echo "debbuilder finished";
                                                    </arg>
                                                </cmd>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        
        <profile>
            <id>docker-stampede</id>
            <properties>
                <docker.postgres.host></docker.postgres.host>
                <docker.postgres.port>5432</docker.postgres.port>
                <docker.postgres.password></docker.postgres.password>
                <docker.torodb.setup>false</docker.torodb.setup>
                <docker.torodb.backend.user>torodb</docker.torodb.backend.user>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.mongo.syncsource></docker.mongo.syncsource>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>${docker.torodb.setup}</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>${docker.mongo.syncsource}</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>${docker.postgres.host}</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>${docker.postgres.port}</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>${docker.postgres.database}</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>${docker.torodb.backend.user}</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker-stampede-postgres</id>
            <properties>
                <docker.postgres.password>postgres</docker.postgres.password>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.mongo.syncsource></docker.mongo.syncsource>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>true</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>${docker.mongo.syncsource}</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>postgres</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>5432</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>torod</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>torodb</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <links>
                                            <link>postgres:postgres</link>
                                        </links>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <alias>postgres</alias>
                                    <name>postgres:9.6</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>15432:5432</port>
                                        </ports>
                                        <log>
                                            <prefix>postgres</prefix>
                                            <enabled>true</enabled>
                                            <color>blue</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>docker-stampede-fullstack</id>
            <properties>
                <docker.postgres.password>postgres</docker.postgres.password>
                <docker.torodb.backend.password>torodb</docker.torodb.backend.password>
                <docker.debug>false</docker.debug>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>mongodb</alias>
                                    <name>mongo:3.2</name>
                                    <run>
                                        <hostname>mongodb</hostname>
                                        <ports>
                                            <port>28017:27017</port>
                                        </ports>
                                        <log>
                                            <prefix>mongodb</prefix>
                                            <enabled>true</enabled>
                                            <color>green</color>
                                        </log>
                                        <volumes>
                                            <bind>
                                                <volume>${project.basedir}/src/main/dist/docker:/util</volume>
                                            </bind>
                                        </volumes>
                                        <extraHosts>
                                            <extraHost>mongodb:127.0.0.1</extraHost>
                                        </extraHosts>
                                        <entrypoint>
                                            <arg>/bin/bash</arg>
                                            <arg>/util/initiate-mongo-rs</arg>
                                        </entrypoint>
                                    </run>
                                </image>
                                <image>
                                    <alias>postgres</alias>
                                    <name>postgres:9.6</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>15432:5432</port>
                                        </ports>
                                        <log>
                                            <prefix>postgres</prefix>
                                            <enabled>true</enabled>
                                            <color>blue</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <name>torodb/stampede</name>
                                    <run>
                                        <env>
                                            <POSTGRES_PASSWORD>${docker.postgres.password}</POSTGRES_PASSWORD>
                                            <TORODB_SETUP>true</TORODB_SETUP>
                                            <TORODB_SYNC_SOURCE>mongodb:27017</TORODB_SYNC_SOURCE>
                                            <TORODB_BACKEND_HOST>postgres</TORODB_BACKEND_HOST>
                                            <TORODB_BACKEND_PORT>5432</TORODB_BACKEND_PORT>
                                            <TORODB_BACKEND_DATABASE>torod</TORODB_BACKEND_DATABASE>
                                            <TORODB_BACKEND_USER>torodb</TORODB_BACKEND_USER>
                                            <TORODB_BACKEND_PASSWORD>${docker.torodb.backend.password}</TORODB_BACKEND_PASSWORD>
                                            <DEBUG>${docker.debug}</DEBUG>
                                        </env>
                                        <links>
                                            <link>postgres:postgres</link>
                                            <link>mongodb:mongodb</link>
                                        </links>
                                        <log>
                                            <prefix>torodb</prefix>
                                            <enabled>true</enabled>
                                            <color>white</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <profiles.resources>src/main/profiles/prod</profiles.resources>
            </properties>
        </profile>

    </profiles>

</project>
