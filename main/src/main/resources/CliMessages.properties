cli.version=Print version and exit.
cli.help=Print help and exit.
cli.print-config=Print the configuration in YAML format and exit.
cli.print-xml-config=Print the configuration in XML format and exit.
cli.help-param=Print help for all available parameters and exit.
cli.print-param=Print value for a parameter present at <path> (print an empty string if parameter is not present). Use --help-param to see <path> syntax.
cli.help-param-header=Parameters help (-p or --param flag):\n\nTo specify a parameter use the syntax <path>=<value> where:\n\t\
<path> follow JSON pointer format (http://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-03) with the exception that you can omit the first '/' character.\n\t\
<value> have the same syntax as values in YAML 1.1 format (http://yaml.org/spec/1.1/).\n\n\
You can specify any number of parameters by repeating -p or --param flag. Possible paths are:\n
cli.conf=Configuration file in YAML format.
cli.xml-conf=Configuration file in XML format.
cli.backend=Specify the backend to use with default values.
cli.param=Specify a configuration parameter using <path>=<value> syntax. Use --help-param to see all available parameters.
cli.ask-for-password=Force input of PostgreSQL's database user password.

config.logging=ToroDB logging configuration
config.offHeapBuffer=ToroDB offHeapBuffer system configuration

config.generic=Generic ToroDB configuration
config.generic.logLevel=Level of log emitted (will overwrite default log4j2 configuration)
config.generic.logPackages=Specifies level of log emitted for packages
config.generic.logFile=File where log will be written
config.generic.log4j2File=Log4j2 configuration file
config.generic.connectionPoolTimeout=The timeout in milliseconds after which retrieve a connection from the pool will fail.
config.generic.connectionPoolSize=Maximum number of connections to establish to the database. It must be higher or equal than 3
config.generic.reservedReadPoolSize=Reserved connections that will be reserved to store global cursors. It must be lower than total connections minus 2
config.generic.metricsEnabled=Enable or disable metrics system
config.generic.enableMetrics=Enable metrics system

config.offHeapBuffer.enabled=If set to `true`, it enabled the use of the off heap buffer system., if `false` it's disabled.
config.offHeapBuffer.path=Absolute path to locate the off heap buffer files.
config.offHeapBuffer.maxFiles=Rolling cycle for the off heap buffer files. The values can be: `DAILY`, `HOURLY` or `MINUTELY`.
config.offHeapBuffer.rollcycle=Max number of files to store for the off heap buffer.

config.replication=MongoDB replication configuration

config.mongo.net.bindIp=The host or IP associate to the interface where clients will connect to. Use * to specify any interface
config.mongo.net.port=The port where the clients will connect to
config.mongo.replication.replSetName=The name of the MongoDB Replica Set where this instance will attach
config.mongo.replication.role=The role that this instance will assume in the replica set.
config.mongo.role.HIDDEN_SLAVE=The instance will not participate in voting and can not be elected as master
config.mongo.replication.syncSource=The host and port (<host>:<port>) of the node from ToroDB has to replicate
config.mongo.replication.shard.name=The name that will be appended to database identifier for the specified shard
config.mongo.replication.ssl=SSL configuration for replication connection to MongoDB
config.mongo.replication.ssl.enabled=Enable or disable SSL/TLS layer
config.mongo.replication.enableSsl=Enable SSL/TLS layer
config.mongo.replication.ssl.allowInvalidHostnames=Disable hostname verification
config.mongo.replication.ssl.fipsMode=Enable FIPS 140-2 mode
config.mongo.replication.ssl.caFile=The path to the Certification Authority in PEM format
config.mongo.replication.ssl.trustStoreFile=The path to the Java Key Store file containing the Certification Authority. If CAFile is specified it will be used instead
config.mongo.replication.ssl.trustStorePassword=The password of the Java Key Store file containing the Certification Authority
config.mongo.replication.ssl.keyStoreFile=The path to the Java Key Store file containing the certificate and private key used to authenticate client
config.mongo.replication.ssl.keyStorePassword=The password of the Java Key Store file containing and private key used to authenticate client
config.mongo.replication.ssl.keyPassword=The password of the private key used to authenticate client
config.mongo.replication.auth=Authentication configuration for replication connection to MongoDB
config.mongo.replication.auth.mode=The authentication mode
config.mongo.replication.auth.mode_extended=The authentication mode:\n\
\t* disabled: Disable authentication mechanism. No authentication will be done\n\
\t* negotiate: The client will negotiate best mechanism to authenticate. With server version 3.0 or above, the driver will authenticate using the SCRAM-SHA-1 mechanism. Otherwise, the driver will authenticate using the Challenge Response mechanism\n\
\t* cr: Challenge Response authentication\n\
\t* x509: X.509 authentication\n\
\t* scram_sha1: SCRAM-SHA-1 SASL authentication
config.mongo.replication.include=A map of databases and/or collections and/or indexes to exclusively replicate.\n\t# Each entry represent a database name under which a list of collection names can be specified.\n\t# Each collection can contain a list of indexes each formed by one or more of those fields:\n\t# \tname=<string> the index name\n\t# \tunqiue=<boolean> true when index is unique, false otherwise\n\t# \tkeys/<string>=<string> the name of the field indexed and the index direction or type\n\t# Character '*' can be used to denote "any-character" and character '\\' to escape characters. 
config.mongo.replication.exclude=A map of databases and/or collections and/or indexes that will not be replicated (override include property).\n\t# Each entry represent a database name under which a list of collection names can be specified.\n\t# Each collection can contain a list of indexes each formed by one or more of those fields:\n\t# \tname=<string> the index name\n\t# \tunqiue=<boolean> true when index is unique, false otherwise\n\t# \tkeys/<string>=<string> the name of the field indexed and a comma separated list index type\n\t# Character '*' can be used to denote "any-character" and character '\\' to escape characters.
config.mongo.authmode.disabled=Disable authentication mechanism. No authentication will be done
config.mongo.authmode.negotiate=The client will negotiate best mechanism to authenticate. With server version 3.0 or above, the driver will authenticate using the SCRAM-SHA-1 mechanism. Otherwise, the driver will authenticate using the Challenge Response mechanism
config.mongo.authmode.cr=Challenge Response authentication
config.mongo.authmode.x509=X.509 authentication
config.mongo.authmode.scram_sha1=SCRAM-SHA-1 SASL authentication
config.mongo.replication.auth.user=The user that will be authenticate
config.mongo.replication.auth.source=The source database where the user is present
config.mongo.replication.auth.gssapiServiceName=This property is used when the service's name is different that the default of mongodb.
config.mongo.replication.auth.gssapiHostName=This property is used when the fully qualified domain name (FQDN) of the host is required to properly authenticate.
config.mongo.replication.auth.gssapiSubject=This property is used for overriding the Subject under which GSSAPI authentication executes.
config.mongo.replication.auth.gssapiSaslClientProperties=While rarely needed, this property is used to replace the SasClient properties.
config.mongo.cursorTimeout=The timeout in milliseconds after which an opened cursor will be closed automatically.
config.mongo.mongopassFile=You can specify a file that use .pgpass syntax: <host>:<port>:<database>:<user>:<password> (can have multiple lines)
config.mongo.shards=A list of configurations for each replica set that represent a shard in a mondogdb cluster.

config.backend=Backend configuration (only one /backend/<backend> section can be specified)

config.pool=ToroDB backend pool configuration

config.backend.postgres=PostgreSQL configuration (default)
config.backend.postgres.host=The host or ip that will be used to connect
config.backend.postgres.port=The port that will be used to connect
config.backend.postgres.database=The database that will be used
config.backend.postgres.user=The user that will be used to connect
config.backend.postgres.password=Specify password that will be used to connect
config.backend.postgres.toropassFile=You can specify a file that use .pgpass syntax: <host>:<port>:<database>:<user>:<password> (can have multiple lines)
config.backend.postgres.applicationName=The application name used by driver to connect
config.backend.postgres.includeForeignKeys=If enabled internal columns relations between data tables will be enforced by foreign keys.  
config.backend.postgres.ssl=If true enabled the SSL connection with PostgreSQL server, if false is disabled. 

config.backend.mysql=MySQL configuration
config.backend.mysql.host=The host or ip that will be used to connect
config.backend.mysql.port=The port that will be used to connect
config.backend.mysql.database=The database that will be used
config.backend.mysql.user=The user that will be used to connect
config.backend.mysql.password=Specify password that will be used to connect
config.backend.mysql.toropassFile=You can specify a file that use .pgpass syntax: <host>:<port>:<database>:<user>:<password> (can have multiple lines)
config.backend.mysql.applicationName=The application name used by driver to connect
config.backend.mysql.includeForeignKeys=If enabled internal columns relations between data tables will be enforced by foreign keys.  
config.backend.mysql.ssl=If true enabled the SSL connection with MySQL server, if false is disabled. 
